# Resources for the LeeEditorView class

# top-level menus

fileMenu.text = File
helpMenu.text = Help

# @Action resources

showAboutBox.Action.text = &About...
showAboutBox.Action.shortDescription = Show the application's information dialog

# status bar resources

StatusBar.messageTimeout = 5000
StatusBar.busyAnimationRate = 30
StatusBar.idleIcon = busyicons/idle-icon.png
StatusBar.busyIcons[0]  = busyicons/busy-icon0.png
StatusBar.busyIcons[1]  = busyicons/busy-icon1.png
StatusBar.busyIcons[2]  = busyicons/busy-icon2.png
StatusBar.busyIcons[3]  = busyicons/busy-icon3.png
StatusBar.busyIcons[4]  = busyicons/busy-icon4.png
StatusBar.busyIcons[5]  = busyicons/busy-icon5.png
StatusBar.busyIcons[6]  = busyicons/busy-icon6.png
StatusBar.busyIcons[7]  = busyicons/busy-icon7.png
StatusBar.busyIcons[8]  = busyicons/busy-icon8.png
StatusBar.busyIcons[9]  = busyicons/busy-icon9.png
StatusBar.busyIcons[10] = busyicons/busy-icon10.png
StatusBar.busyIcons[11] = busyicons/busy-icon11.png
StatusBar.busyIcons[12] = busyicons/busy-icon12.png
StatusBar.busyIcons[13] = busyicons/busy-icon13.png
StatusBar.busyIcons[14] = busyicons/busy-icon14.png
runMenu.text=Run
jPanel1.TabConstraints.tabTitle=Supervision
jScrollPane2.TabConstraints.tabTitle=Editor
runBtn.text=Run
#NOI18N
output.background=51, 51, 51
#NOI18N
output.font=ae_Electron-Plain-11
#NOI18N
mainPanel.background=102, 102, 102
#NOI18N
menuBar.background=0, 51, 51
#NOI18N
fileMenu.background=102, 102, 0
#NOI18N
fileMenu.foreground=204, 0, 255
#NOI18N
helpMenu.foreground=153, 0, 153
#NOI18N
output.foreground=0, 102, 204
output.text=Output:
output.toolTipText=Output from Interpreter
#NOI18N
runBtn.background=153, 204, 0
#NOI18N
runBtn.foreground=255, 255, 255
clearBtn.text=Clear
#NOI18N
clearBtn.background=255, 51, 51
#NOI18N
jScrollPane1.font=ae_Electron-Bold-12
#NOI18N
output.selectionColor=102, 255, 0
#NOI18N
output.selectedTextColor=255, 0, 51
openBtn.text=Open VAI
saveBtn.text=Save VAI
saveOutBtn.text=Save Output
jMenuItem1.text=Open Output
newBtn.text=New
#NOI18N
jTabbedPane1.background=0, 51, 51
#NOI18N
jTabbedPane1.foreground=255, 255, 255
#NOI18N
exetable.background=51, 51, 51
#NOI18N
exetable.foreground=255, 51, 204
runBtn.toolTipText=Click on run until successful execution.
editor.contentType=text/rtf
#NOI18N
editor.background=0, 0, 0
#NOI18N
editor.foreground=255, 0, 51
#NOI18N
editor.font=ae_Electron-Plain-11
#NOI18N
editor.caretColor=0, 102, 204
#NOI18N
editor.selectedTextColor=153, 255, 51
#NOI18N
editor.selectionColor=255, 51, 51
jMenu1.text=Edit
#NOI18N
jMenu1.foreground=255, 0, 102
jMenuItem3.text=Copy
jMenuItem4.text=Cut
jMenuItem5.text=Paste
editMenu.text=Editable
#NOI18N
varText.background=184, 207, 229
#NOI18N
varText.foreground=153, 204, 0
#NOI18N
varText.font=ae_Metal-Plain-11
undoAction.text=Un-(Re)do
jScrollPane5.TabConstraints.tabTitle=Special
jScrollPane6.TabConstraints.tabTitle=Manager
jPanel2.TabConstraints.tabTitle=Graph
codeTabPane.TabConstraints.tabTitle=Code
jTabbedPane3.TabConstraints.tabTitle=Headers
jScrollPane7.TabConstraints.tabTitle=Enact
jScrollPane8.TabConstraints.tabTitle=Enactage
jScrollPane9.TabConstraints.tabTitle=EnactEL
jScrollPane10.TabConstraints.tabTitle=Interestact
jScrollPane11.TabConstraints.tabTitle=IsImplies
jScrollPane12.TabConstraints.tabTitle=Locationact
jScrollPane13.TabConstraints.tabTitle=Temporalrank
enactELH.text=//\n// File:   IsImplies.h\n// Author: appiah\n//\n//\n#include "LEEType.h"\n#include "temporalrank.h"\n#include "Enact.h"\n#include "enactEL.h"\n#include "locationact.h"\n#include "Enactage.h"\n#include "interestact.h"\n\n//using namespace lee::ture;\n\n#ifndef _ISIMPLIES_H\n#define\t_ISIMPLIES_H\n\n\nclass IsImplies{\npublic:\n    IsImplies();\n    void setEnact1(Enactage E, Enact L);\n    void setInterestAct1(Enactage I, action A);\n    void setLocationAct1(location Loc, action Ac);\n    void setTemporalRank1(temporal T, rank R);\n    enactEL getEnact();\n    locationact getLocationAct();\n    temporalrank getTemporalRank();\n    interestact getInterestAct();\n    void setEnact(enactEL EL);\n    void setInterestAct(interestact IA);\n    void setLocationAct(locationact LA);\n    void setTemporalRank(temporalrank TR);\nprivate:\n    temporalrank TR;\n    locationact LA;\n    enactEL EL;\n    interestact IA;\n    Enactage E;\n    Enact L;\n    rank R;\n    action A;\n    Enactage I;\n    location Loc;\n    temporal T;\n};\n#endif\t/* _ISIMPLIES_H */\n\n
enactH.text=//\n// File:   Enactage.h\n// Author: appiah\n//\n// \n//\n\n#include "LEEType.h"\n#ifndef _ENACT_H\n#define\t_ENACT_H\n\nusing namespace std;\n\n\nclass Enact{\npublic:\n    Enact();\n    Enact(interest inrs1, interest inrs2);\n    Enact(interest inrs1, interest inrs2, rank r);\n    void setInterests(interest inrs1, interest inrs2);\n    void setRank(rank r);\n    rank getRank();\n    interest* getInterests();\nprivate:\n    rank R;\n    interest IRS[2];\n    interest IT1;\n    interest IT2;\n};\n\n#endif\t/* _ENACT_H */
temporalH.text=//\n// File:   ImplieStruct.h\n// Author: appiah\n//\n//\n\n#include "Enact.h"\n#include "Enactage.h"\n\n\n#ifndef _TEMPORALRANK_H\n#define\t_TEMPORALRANK_H\n\n\n\nclass temporalrank{\npublic:\n    temporalrank();\n    temporalrank(Enact ee, Enactage eage);\n    Enact getEnactment();\n    Enactage getEngagement();\n    char* toString();\nprotected:\n    Enact T;\n    Enactage R;\n};\n#endif\t/* _TEMPORALRANK_H */\n\n
#NOI18N
temporalH.background=255, 255, 0
#NOI18N
enactH.background=255, 255, 0
#NOI18N
enactELH.background=255, 255, 0
enactageH.text=//\n// File:   Enact.h\n// Author: appiah\n//\n//\n#include "LEEType.h"\n\n\n#ifndef _ENACTAGE_H\n#define\t_ENACTAGE_H\n\n//using namespace std;\n\nclass Enactage{\npublic:\n    Enactage();\n    Enactage(action a, location l, temporal t);\n    void setAction(action a);\n    void setLocation(location l);\n    void setTemporal(temporal t);\n    action getAction();\n    location getLocation();\n    temporal getTemporal();\nprivate:\n    action act;\n    location loc;\n    temporal temp;\n};\n\n#endif\t/* _ENACTAGE_H */\n\n
#NOI18N
enactageH.background=255, 255, 0
isimpliesH.text=//\n// File:   IsImplies.h\n// Author: appiah\n\n//\n#include "LEEType.h"\n#include "temporalrank.h"\n#include "Enact.h"\n#include "enactEL.h"\n#include "locationact.h"\n#include "Enactage.h"\n#include "interestact.h"\n\n//using namespace lee::ture;\n\n#ifndef _ISIMPLIES_H\n#define\t_ISIMPLIES_H\n\n\nclass IsImplies{\npublic:\n    IsImplies();\n    void setEnact1(Enactage E, Enact L);\n    void setInterestAct1(Enactage I, action A);\n    void setLocationAct1(location Loc, action Ac);\n    void setTemporalRank1(temporal T, rank R);\n    enactEL getEnact();\n    locationact getLocationAct();\n    temporalrank getTemporalRank();\n    interestact getInterestAct();\n    void setEnact(enactEL EL);\n    void setInterestAct(interestact IA);\n    void setLocationAct(locationact LA);\n    void setTemporalRank(temporalrank TR);\nprivate:\n    temporalrank TR;\n    locationact LA;\n    enactEL EL;\n    interestact IA;\n    Enactage E;\n    Enact L;\n    rank R;\n    action A;\n    Enactage I;\n    location Loc;\n    temporal T;\n};\n#endif\t/* _ISIMPLIES_H */\n\n
#NOI18N
isimpliesH.background=255, 255, 0
locationH.text=// \n// File:   interestact.h\n// Author: appiah\n//\n//\n\n#include "LEEType.h"\n#include "Enactage.h"\n#include "Enact.h"\n\n#ifndef _INTERESTACT_H\n#define\t_INTERESTACT_H\n\nclass interestact{\npublic:\n    interestact();\n    interestact(Enactage ia, Enact en);\nprotected:\n    Enactage I;\n    Enact A;\n};\n\n\n\n#endif\t/* _INTERESTACT_H */\n\n
#NOI18N
locationH.background=255, 255, 0
interestactH.text=// \n// File:   interestact.h\n// Author: appiah\n//\n// \n//\n\n#include "LEEType.h"\n#include "Enactage.h"\n#include "Enact.h"\n\n#ifndef _INTERESTACT_H\n#define\t_INTERESTACT_H\n\nclass interestact{\npublic:\n    interestact();\n    interestact(Enactage ia, Enact en);\nprotected:\n    Enactage I;\n    Enact A;\n};\n\n\n\n#endif\t/* _INTERESTACT_H */\n\n
#NOI18N
interestactH.background=255, 255, 0
jScrollPane14.TabConstraints.tabTitle=LEEType
jTextPane1.text=//\n// File:   LEEType.h\n// Author: appiah\n//\n// \n\n\n#ifndef _LEETYPE_H\n#define\t_LEETYPE_H\n\ntypedef char* action;\ntypedef char* location;\ntypedef char* temporal;\ntypedef char* rank;\ntypedef char* interest;\n\n#endif\t/* _LEETYPE_H */\n\n
#NOI18N
jTextPane1.background=255, 255, 0
jTabbedPane4.TabConstraints.tabTitle=Classes
jScrollPane15.TabConstraints.tabTitle=Enact.cc
enactCC.text=#include "Enact.h"\n\nEnact::Enact(){\n    \n}\n\nEnact::Enact(interest inr1, interest inr2):\nIT1(inr1),\nIT2(inr2){\n    \n}\n\nEnact::Enact(interest inr3, interest inr4, rank r){\n    IT1=inr3;\n    IT2=inr4;\n    R=r;\n}\n\ninterest* Enact::getInterests(){\n    IRS[0]=IT1;\n    IRS[1]=IT2;\n    \n    return IRS;\n}\n\nrank Enact::getRank(){\n    return R;\n}\n\nvoid Enact::setInterests(interest i1, interest i2){\n    IT1=i1;\n    IT2=i2;\n}\n\nvoid Enact::setRank(rank r)\n{\n    R=r;\n}\n
#NOI18N
enactCC.background=0, 153, 255
jScrollPane16.TabConstraints.tabTitle=Enactage.cc
enactageCC.text=#include "Enactage.h"\n\nEnactage::Enactage(){\n    \n}\n\nEnactage::Enactage(action a, location l, temporal t):\nact(a),\nloc(l),\ntemp(t){\n    \n}\naction Enactage::getAction(){\n    return act;\n}\n\ntemporal Enactage::getTemporal(){\n    return temp;\n}\n\nlocation Enactage::getLocation(){\n    return loc;\n}\n\nvoid Enactage::setAction(action a){\n    act=a;\n}\n\nvoid Enactage::setLocation(location l){\n    loc=l;\n}\n\nvoid Enactage::setTemporal(temporal t){\n    temp=t;\n}\n\n
#NOI18N
enactageCC.background=51, 153, 255
jScrollPane17.TabConstraints.tabTitle=EnactEL.cc
enactELCC.text=\n#include "enactEL.h"\n\nenactEL::enactEL(){\n    \n}\n\nEnactage enactEL::getEnactage(){\n    return E;\n}\n\nEnact enactEL::getEnactmentL(){\n    return L;\n}\n\nenactEL::enactEL(Enactage e, Enact l) {\n    L.setInterests(l.getInterests()[0], l.getInterests()[1]);\n    L.setRank(l.getRank());\n    E.setAction(e.getAction());\n    E.setLocation(e.getLocation());\n    E.setTemporal(e.getTemporal());\n}\n
#NOI18N
enactELCC.background=51, 153, 255
jScrollPane18.TabConstraints.tabTitle=Interestact.cc
jTextPane2.text=#include "interestact.h"\n\ninterestact::interestact(){\n//    A=new Enact();\n //   I=new Enactage();\n}\n\ninterestact::interestact(Enactage ia, Enact en):\nA(en),\nI(ia){\n    \n}\n\n
#NOI18N
jTextPane2.background=51, 153, 255
jScrollPane19.TabConstraints.tabTitle=IsImplies.cc
jTextPane3.text=#include "IsImplies.h"\n#include "interestact.h"\n#include "temporalrank.h"\n#include "enactEL.h"\n#include "Enact.h"\n#include "Enactage.h"\n\nIsImplies::IsImplies(){    \n}\n\nenactEL IsImplies::getEnact(){\n    return EL;\n}\n\ninterestact IsImplies::getInterestAct(){\n    return IA;\n}\n\nlocationact IsImplies::getLocationAct(){\n    return LA;\n}\n\ntemporalrank IsImplies::getTemporalRank(){\n    return TR;\n}\n\nvoid IsImplies::setEnact(enactEL el){\n    EL=el;\n}\n\nvoid IsImplies::setEnact1(Enactage e, Enact l){\n    E.setAction(e.getAction());\n    E.setLocation(e.getLocation());\n    E.setTemporal(e.getTemporal());\n    L.setInterests(l.getInterests()[0],l.getInterests()[1]);\n    L.setRank(l.getRank());\n}\n\nvoid IsImplies::setInterestAct(interestact ia){\n    IA=ia;\n}\n\nvoid IsImplies::setInterestAct1(Enactage i, action a){\n    char* ir=i.getAction();\n    char* lr1=i.getLocation();\n    I.setAction(ir);\n    I.setLocation(lr1);\n    I.setAction(a);\n    A=a;\n}\n\nvoid IsImplies::setLocationAct1(location loc, action A){\n    Loc=loc;\n    A=A;\n}\n\nvoid IsImplies::setTemporalRank1(temporal T, rank R){\n    T=T;\n    R=R;\n}\n\nvoid IsImplies::setTemporalRank(temporalrank tr){\n    TR=tr;\n}\n\n
#NOI18N
jTextPane3.background=51, 153, 255
jScrollPane20.TabConstraints.tabTitle=Locationact
jTextPane4.text=#include "locationact.h"\n\nlocationact::locationact(){\n    \n}\n\nlocationact::locationact(Enactage la){\n     locAct=la;    \n}\n\nEnactage locationact::getEngagement(){\n    return locAct;\n}\n\n
#NOI18N
jTextPane4.background=51, 153, 255
jScrollPane21.TabConstraints.tabTitle=Temporalrank.cc
jTextPane5.text=#include "temporalrank.h"\n\ntemporalrank::temporalrank(){\n    \n}\n\ntemporalrank::temporalrank(Enact ee, Enactage age){\n    R=age;\n    T=ee;\n}\n\nEnact temporalrank::getEnactment(){\n    return T;\n}\n\nEnactage temporalrank::getEngagement(){\n    return R;\n}\n\nchar* temporalrank::toString(){\n    char* oo="rank-->r";\n    return oo;\n}\n
#NOI18N
jTextPane5.background=51, 153, 255
#NOI18N
jTabbedPane4.background=204, 0, 102
#NOI18N
jTabbedPane4.foreground=204, 204, 204
#NOI18N
codeTabPane.background=51, 255, 204
#NOI18N
codeTabPane.foreground=102, 255, 0
#NOI18N
jTabbedPane2.background=255, 153, 0
#NOI18N
jTabbedPane2.foreground=204, 204, 204
jTabbedPane6.TabConstraints.tabTitle=Performance
jScrollPane22.TabConstraints.tabTitle=Memory
jScrollPane23.TabConstraints.tabTitle=Object Topology
jScrollPane24.TabConstraints.tabTitle=Heap Dump
#NOI18N
memoryTxt.background=255, 102, 102
#NOI18N
jTabbedPane6.background=51, 51, 255
#NOI18N
jTabbedPane6.foreground=153, 153, 153
#NOI18N
jTabbedPane3.background=0, 102, 0
#NOI18N
jTabbedPane3.foreground=255, 255, 255
jScrollPane25.TabConstraints.tabTitle=Rule Translator
#NOI18N
translateTxt.background=51, 204, 0
#NOI18N
translateTxt.foreground=255, 255, 0
editor.text=
editor.toolTipText=Write programs from examples in sample.
formatMenu.text=Format
saveBtn.toolTipText=Save code in editor
openBtn.toolTipText=Read a vai code from file
newBtn.toolTipText=New variable assignment for enact interpretation
runMenu.toolTipText=Execute and interpret enact program
jMenuItem1.toolTipText=Open an lee file from earlier interpretation.
saveOutBtn.toolTipText=Save output of interpretation into file.
editMenu.toolTipText=Activate for editing or not.
formatMenu.toolTipText=Program style a code in editor.
